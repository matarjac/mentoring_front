{"ast":null,"code":"var _jsxFileName = \"/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader, CodeBlockBody, CodeBlockHeaderTitle, ViewOnlySign } from \"../../styledComponents/codeBlockPageStyledComponents\";\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nexport const CodeBlockPage = () => {\n  _s();\n  const {\n    id = ''\n  } = useParams();\n  const codeBlocksData = useSelector(state => state.codeBlocks.value);\n  const currentCodeBlock = codeBlocksData.filter(codeBlock => codeBlock._id === id);\n  const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n  const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n  const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n  const [socketID, setSocketID] = useState('');\n  const [onlineUsersCount, setOnlineUsersCount] = useState();\n  const [mentorSocketID, setMentorSocketID] = useState(sessionStorage.getItem('mentorID') || '');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // join user to socket's room (by codeBlock's _id)\n    socket.emit(\"join_room\", id);\n\n    // Get current socket ID and store in socketID\n    socket.emit('socket_id');\n    socket.on('receive_socket_id', data => {\n      setSocketID(data.id);\n    });\n\n    // Get count of online user and store in onlineUsersCount\n    socket.emit('users_count');\n    socket.on('receive_users_count', data => {\n      setOnlineUsersCount(data.onlineUsers);\n    });\n    if (onlineUsersCount === 1) {\n      console.log('socketID', socketID);\n    } else {\n      console.log('what');\n    }\n  }, []);\n  useEffect(() => {\n    console.log(socketID);\n  }, [socketID]);\n  useEffect(() => {\n    socket.on(\"receive_code_change\", data => {\n      setCodeBlockCode(data.code);\n    });\n  }, [socket]);\n  const emitChange = () => {\n    socket.emit('change_code', {\n      code: codeBlockCode\n    }, id);\n  };\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    const newString = newText.split(\"\\n\");\n    setCodeBlockArr(newString);\n    setCodeBlockCode(e.target.value);\n    emitChange();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CodeBlockContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CodeBlockHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CodeBlockHeaderTitle, {\n          children: codeBlockName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlockHeaderTitle, {\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CodeBlockBody, {\n        children: [/*#__PURE__*/_jsxDEV(CodeTag, {\n          children: codeBlockCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CodeTextArea, {\n          value: codeBlockCode,\n          readOnly: socketID === mentorSocketID,\n          onChange: e => handleTextChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), socketID && mentorSocketID && /*#__PURE__*/_jsxDEV(ViewOnlySign, {\n        children: \"View only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CodeBlockPage, \"KJLaNTTGIRHejOTS5zEhi0zhNJY=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n_c = CodeBlockPage;\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);\nvar _c;\n$RefreshReg$(_c, \"CodeBlockPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","useParams","CodeTextArea","CodeBlockContainer","CodeTag","CodeBlockHeader","CodeBlockBody","CodeBlockHeaderTitle","ViewOnlySign","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","CodeBlockPage","_s","id","codeBlocksData","state","codeBlocks","value","currentCodeBlock","filter","codeBlock","_id","codeBlockCode","setCodeBlockCode","code","codeBlockArr","setCodeBlockArr","codeBlockName","setCodeBlockName","name","socketID","setSocketID","onlineUsersCount","setOnlineUsersCount","mentorSocketID","setMentorSocketID","sessionStorage","getItem","dispatch","emit","on","data","onlineUsers","console","log","emitChange","handleTextChange","e","newText","target","newString","split","children","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onChange","_c","$RefreshReg$"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { IStore } from \"../../interfaces/IStore\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader, CodeBlockBody, CodeBlockHeaderTitle, ViewOnlySign } from \"../../styledComponents/codeBlockPageStyledComponents\";\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport { setMentor } from \"../../store/codeBlocksSlicer\";\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:8000');\nexport const CodeBlockPage: React.FC = () => {\n\n    const { id = '' } = useParams();\n    const codeBlocksData = useSelector((state: IStore) => state.codeBlocks.value);\n    const currentCodeBlock = codeBlocksData.filter((codeBlock) => codeBlock._id === id);\n    const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n    const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n    const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n    const [socketID, setSocketID] = useState<string>('');\n    const [onlineUsersCount, setOnlineUsersCount] = useState();\n    const [mentorSocketID, setMentorSocketID] = useState<string>(\n        sessionStorage.getItem('mentorID') || ''\n    );\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        // join user to socket's room (by codeBlock's _id)\n        socket.emit(\"join_room\", id);\n\n        // Get current socket ID and store in socketID\n        socket.emit('socket_id');\n        socket.on('receive_socket_id', (data) => {\n            setSocketID(data.id);\n        });\n\n        // Get count of online user and store in onlineUsersCount\n        socket.emit('users_count');\n        socket.on('receive_users_count', (data) => {\n            setOnlineUsersCount(data.onlineUsers)\n        });\n\n        if (onlineUsersCount === 1) {\n            console.log('socketID', socketID);\n        } else {\n            console.log('what')\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log(socketID);\n    }, [socketID])\n\n    useEffect(() => {\n        socket.on(\"receive_code_change\", (data) => {\n            setCodeBlockCode(data.code);\n        })\n    }, [socket]);\n\n    const emitChange = () => {\n        socket.emit('change_code', { code: codeBlockCode }, id)\n    };\n\n    const handleTextChange = (e: any) => {\n        const newText = e.target.value;\n        const newString = newText.split(\"\\n\");\n        setCodeBlockArr(newString);\n        setCodeBlockCode(e.target.value);\n        emitChange();\n    }\n\n    return (\n        <>\n            <CodeBlockContainer>\n                <CodeBlockHeader>\n                    <CodeBlockHeaderTitle>{codeBlockName}</CodeBlockHeaderTitle>\n                    <CodeBlockHeaderTitle>JavaScript</CodeBlockHeaderTitle>\n                </CodeBlockHeader>\n                <CodeBlockBody>\n                    <CodeTag>{codeBlockCode}</CodeTag>\n                    <CodeTextArea value={codeBlockCode} readOnly={socketID === mentorSocketID} onChange={(e) => handleTextChange(e)} />\n                </CodeBlockBody>\n                {socketID && mentorSocketID && <ViewOnlySign>View only</ViewOnlySign>}\n            </CodeBlockContainer>\n        </>\n    )\n}\n\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}