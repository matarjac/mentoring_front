{"ast":null,"code":"var _jsxFileName = \"/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader } from \"../../styledComponents/codeBlockPageStyledComponents\";\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CodeBlockPage = () => {\n  _s();\n  const socket = io('http://localhost:8000');\n  const {\n    id = ''\n  } = useParams();\n  const codeBlocksData = useSelector(state => state.codeBlocks.value);\n  const currentCodeBlock = codeBlocksData.filter(codeBlock => codeBlock._id === id);\n  const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n  const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n  const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n  const [isMentor, setIsMentor] = useState(false);\n  const emitChange = () => {\n    socket.emit('change_code', {\n      code: codeBlockCode\n    });\n  };\n  useEffect(() => {\n    socket.on('users_count', data => {\n      console.log(\"users>>> \", data);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"receive_code_change\", data => {\n      setCodeBlockCode(data.code);\n    });\n  }, [socket]);\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    const newString = newText.split(\"\\n\");\n    setCodeBlockArr(newString);\n    setCodeBlockCode(e.target.value);\n    emitChange();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CodeBlockContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CodeBlockHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {},\n          children: codeBlockName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CodeTag, {\n          children: codeBlockCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CodeTextArea, {\n          value: codeBlockCode,\n          readOnly: isMentor,\n          onChange: e => handleTextChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CodeBlockPage, \"G6f5PWVCzZaXa2zrurSv1GfOu/I=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = CodeBlockPage;\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);\nvar _c;\n$RefreshReg$(_c, \"CodeBlockPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useParams","CodeTextArea","CodeBlockContainer","CodeTag","CodeBlockHeader","io","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeBlockPage","_s","socket","id","codeBlocksData","state","codeBlocks","value","currentCodeBlock","filter","codeBlock","_id","codeBlockCode","setCodeBlockCode","code","codeBlockArr","setCodeBlockArr","codeBlockName","setCodeBlockName","name","isMentor","setIsMentor","emitChange","emit","on","data","console","log","handleTextChange","e","newText","target","newString","split","children","style","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onChange","_c","$RefreshReg$"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { IStore } from \"../../interfaces/IStore\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader } from \"../../styledComponents/codeBlockPageStyledComponents\";\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\n\n\nexport const CodeBlockPage: React.FC = () => {\n    const socket = io('http://localhost:8000');\n\n    const { id = '' } = useParams();\n    const codeBlocksData = useSelector((state: IStore) => state.codeBlocks.value);\n    const currentCodeBlock = codeBlocksData.filter((codeBlock) => codeBlock._id === id);\n    const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n    const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n    const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n    const [isMentor, setIsMentor] = useState(false);\n\n\n    const emitChange = () => {\n        socket.emit('change_code', { code: codeBlockCode })\n    };\n\n    useEffect(() => {\n        socket.on('users_count', (data) => {\n            console.log(\"users>>> \", data);\n        })\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"receive_code_change\", (data) => {\n            setCodeBlockCode(data.code);\n        })\n    }, [socket]);\n\n\n    const handleTextChange = (e: any) => {\n        const newText = e.target.value;\n        const newString = newText.split(\"\\n\");\n        setCodeBlockArr(newString);\n        setCodeBlockCode(e.target.value);\n        emitChange();\n    }\n\n    return (\n        <>\n            <CodeBlockContainer>\n                <CodeBlockHeader>\n                    <span style={{}}>{codeBlockName}</span>\n                    <span>JavaScript</span>\n                </CodeBlockHeader>\n                <>\n                    <CodeTag>{codeBlockCode}</CodeTag>\n                    <CodeTextArea value={codeBlockCode} readOnly={isMentor} onChange={(e) => handleTextChange(e)} />\n                </>\n            </CodeBlockContainer>\n            {/* <button onClick={() => { sendMessage() }}>send Message to server</button> */}\n        </>\n    )\n}\n\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}