{"ast":null,"code":"var _jsxFileName = \"/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader, CodeBlockBody, CodeBlockHeaderTitle, ViewOnlySign } from \"../../styledComponents/codeBlockPageStyledComponents\";\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nexport const CodeBlockPage = () => {\n  _s();\n  const {\n    id = ''\n  } = useParams();\n  const codeBlocksData = useSelector(state => state.codeBlocks.value);\n  const currentCodeBlock = codeBlocksData.filter(codeBlock => codeBlock._id === id);\n  const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n  const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n  const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n  const [socketID, setSocketID] = useState('');\n  const [mentorSocketID, setMentorSocketID] = useState(sessionStorage.getItem('mentorID') || '');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // join user to socket's room (by codeBlock's _id)\n    socket.emit(\"join_room\", id);\n\n    // Get current socket ID and store in socketID\n    socket.emit('socket_id');\n    socket.on('receive_socket_id', data => {\n      setSocketID(data.id);\n    });\n\n    // Get count of online user and store in onlineUsersCount\n    socket.emit('users_count');\n    socket.on('receive_users_count', data => {\n      console.log('users>>', data.onlineUsers);\n      if (data.onlineUsers === 1) {\n        console.log('socketID', socketID);\n        setMentorSocketID(socketID);\n        sessionStorage.setItem('mentorID', JSON.stringify(socketID));\n        // dispatch(setMentor(socketID));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    console.log(socketID);\n  }, [socketID]);\n  // const mentorID = useSelector((state: IStore) => state.codeBlocks.mentorID);\n  // console.log('mentor>>', mentorID);\n\n  useEffect(() => {\n    socket.on(\"receive_code_change\", data => {\n      setCodeBlockCode(data.code);\n    });\n  }, [socket]);\n  const emitChange = () => {\n    socket.emit('change_code', {\n      code: codeBlockCode\n    }, id);\n  };\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    const newString = newText.split(\"\\n\");\n    setCodeBlockArr(newString);\n    setCodeBlockCode(e.target.value);\n    emitChange();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CodeBlockContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CodeBlockHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CodeBlockHeaderTitle, {\n          children: codeBlockName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlockHeaderTitle, {\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CodeBlockBody, {\n        children: [/*#__PURE__*/_jsxDEV(CodeTag, {\n          children: codeBlockCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CodeTextArea, {\n          value: codeBlockCode,\n          readOnly: socketID === mentorSocketID,\n          onChange: e => handleTextChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), socketID && mentorSocketID && /*#__PURE__*/_jsxDEV(ViewOnlySign, {\n        children: \"View only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CodeBlockPage, \"la5GLFopacEp6sXdwikQSgTdZYc=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n_c = CodeBlockPage;\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);\nvar _c;\n$RefreshReg$(_c, \"CodeBlockPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","useParams","CodeTextArea","CodeBlockContainer","CodeTag","CodeBlockHeader","CodeBlockBody","CodeBlockHeaderTitle","ViewOnlySign","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","CodeBlockPage","_s","id","codeBlocksData","state","codeBlocks","value","currentCodeBlock","filter","codeBlock","_id","codeBlockCode","setCodeBlockCode","code","codeBlockArr","setCodeBlockArr","codeBlockName","setCodeBlockName","name","socketID","setSocketID","mentorSocketID","setMentorSocketID","sessionStorage","getItem","dispatch","emit","on","data","console","log","onlineUsers","setItem","JSON","stringify","emitChange","handleTextChange","e","newText","target","newString","split","children","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onChange","_c","$RefreshReg$"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { IStore } from \"../../interfaces/IStore\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag, CodeBlockHeader, CodeBlockBody, CodeBlockHeaderTitle, ViewOnlySign } from \"../../styledComponents/codeBlockPageStyledComponents\";\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport { setMentor } from \"../../store/codeBlocksSlicer\";\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:8000');\nexport const CodeBlockPage: React.FC = () => {\n\n    const { id = '' } = useParams();\n    const codeBlocksData = useSelector((state: IStore) => state.codeBlocks.value);\n    const currentCodeBlock = codeBlocksData.filter((codeBlock) => codeBlock._id === id);\n    const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n    const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n    const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n    const [socketID, setSocketID] = useState<string>('');\n    const [mentorSocketID, setMentorSocketID] = useState<string>(\n        sessionStorage.getItem('mentorID') || ''\n    );\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        // join user to socket's room (by codeBlock's _id)\n        socket.emit(\"join_room\", id);\n\n        // Get current socket ID and store in socketID\n        socket.emit('socket_id');\n        socket.on('receive_socket_id', (data) => {\n            setSocketID(data.id);\n        });\n\n        // Get count of online user and store in onlineUsersCount\n        socket.emit('users_count');\n        socket.on('receive_users_count', (data) => {\n            console.log('users>>', data.onlineUsers);\n            if (data.onlineUsers === 1) {\n                console.log('socketID', socketID);\n                setMentorSocketID(socketID);\n                sessionStorage.setItem('mentorID', JSON.stringify(socketID));\n                // dispatch(setMentor(socketID));\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        console.log(socketID);\n    }, [socketID])\n    // const mentorID = useSelector((state: IStore) => state.codeBlocks.mentorID);\n    // console.log('mentor>>', mentorID);\n\n    useEffect(() => {\n        socket.on(\"receive_code_change\", (data) => {\n            setCodeBlockCode(data.code);\n        })\n    }, [socket]);\n\n    const emitChange = () => {\n        socket.emit('change_code', { code: codeBlockCode }, id)\n    };\n\n    const handleTextChange = (e: any) => {\n        const newText = e.target.value;\n        const newString = newText.split(\"\\n\");\n        setCodeBlockArr(newString);\n        setCodeBlockCode(e.target.value);\n        emitChange();\n    }\n\n    return (\n        <>\n            <CodeBlockContainer>\n                <CodeBlockHeader>\n                    <CodeBlockHeaderTitle>{codeBlockName}</CodeBlockHeaderTitle>\n                    <CodeBlockHeaderTitle>JavaScript</CodeBlockHeaderTitle>\n                </CodeBlockHeader>\n                <CodeBlockBody>\n                    <CodeTag>{codeBlockCode}</CodeTag>\n                    <CodeTextArea value={codeBlockCode} readOnly={socketID === mentorSocketID} onChange={(e) => handleTextChange(e)} />\n                </CodeBlockBody>\n                {socketID && mentorSocketID && <ViewOnlySign>View only</ViewOnlySign>}\n            </CodeBlockContainer>\n        </>\n    )\n}\n\nexport default CodeBlockPage;\n\n// const codeRef = useRef<HTMLDivElement>(null);\n// hljs.registerLanguage('javascript', javascript);\n// useEffect(() => {\n\n// if (codeRef.current) {\n//     hljs.highlightElement(codeRef.current);\n//     hljs.highlightElement(codeRef.current);\n// }\n// }, [codeBlockCode]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}