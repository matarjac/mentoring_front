{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst getAllCodeBlocks = axios.get('http://localhost:8000/codeBlocks');\nconst {\n  data\n} = await getAllCodeBlocks;\nexport const codeBlocksSlicer = createSlice({\n  name: \"codeBlocks\",\n  initialState: {\n    value: data,\n    mentorID: ''\n  },\n  reducers: {\n    updateCode: (state, action) => {\n      console.log(action.payload);\n      const codeIDToUpdate = action.payload.codeID;\n      const codeBlockToUpdateIndex = state.value.findIndex(codeBlock => codeBlock._id === codeIDToUpdate);\n      state.value[codeBlockToUpdateIndex].code = action.payload.newCode;\n      console.log(state.value);\n    }\n  }\n});\nexport const {\n  updateCode\n} = codeBlocksSlicer.actions;\nexport default codeBlocksSlicer.reducer;","map":{"version":3,"names":["createSlice","axios","getAllCodeBlocks","get","data","codeBlocksSlicer","name","initialState","value","mentorID","reducers","updateCode","state","action","console","log","payload","codeIDToUpdate","codeID","codeBlockToUpdateIndex","findIndex","codeBlock","_id","code","newCode","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/store/codeBlocksSlicer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\ninterface ICodeBlock {\n    _id: string,\n    name: string,\n    code: string\n}\n\nconst getAllCodeBlocks = axios.get('http://localhost:8000/codeBlocks');\nconst { data } = await getAllCodeBlocks;\n\nexport const codeBlocksSlicer = createSlice({\n    name: \"codeBlocks\",\n    initialState: {\n        value: data,\n        mentorID: ''\n    },\n    reducers: {\n        updateCode: (state, action) => {\n            console.log(action.payload);\n            const codeIDToUpdate = action.payload.codeID;\n            const codeBlockToUpdateIndex = state.value.findIndex((\n                codeBlock: ICodeBlock) => codeBlock._id === codeIDToUpdate)\n            state.value[codeBlockToUpdateIndex].code = action.payload.newCode;\n            console.log(state.value);\n        }\n    }\n})\n\nexport const { updateCode } = codeBlocksSlicer.actions;\nexport default codeBlocksSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAQzB,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,GAAG,CAAC,kCAAkC,CAAC;AACtE,MAAM;EAAEC;AAAK,CAAC,GAAG,MAAMF,gBAAgB;AAEvC,OAAO,MAAMG,gBAAgB,GAAGL,WAAW,CAAC;EACxCM,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,KAAK,EAAEJ,IAAI;IACXK,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3B,MAAMC,cAAc,GAAGJ,MAAM,CAACG,OAAO,CAACE,MAAM;MAC5C,MAAMC,sBAAsB,GAAGP,KAAK,CAACJ,KAAK,CAACY,SAAS,CAChDC,SAAqB,IAAKA,SAAS,CAACC,GAAG,KAAKL,cAAc,CAAC;MAC/DL,KAAK,CAACJ,KAAK,CAACW,sBAAsB,CAAC,CAACI,IAAI,GAAGV,MAAM,CAACG,OAAO,CAACQ,OAAO;MACjEV,OAAO,CAACC,GAAG,CAACH,KAAK,CAACJ,KAAK,CAAC;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAW,CAAC,GAAGN,gBAAgB,CAACoB,OAAO;AACtD,eAAepB,gBAAgB,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}