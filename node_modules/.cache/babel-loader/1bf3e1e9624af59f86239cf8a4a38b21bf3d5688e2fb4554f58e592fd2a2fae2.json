{"ast":null,"code":"var _jsxFileName = \"/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag } from \"../../styledComponents/codeBlockPageStyledComponents\";\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CodeBlockPage = () => {\n  _s();\n  const {\n    id = ''\n  } = useParams();\n  const codeBlocksData = useSelector(state => state.codeBlocks.value);\n  const currentCodeBlock = codeBlocksData.filter(codeBlock => codeBlock._id === id);\n  const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n  const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n  const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n  const [isMentor, setIsMentor] = useState(false);\n\n  // const codeRef = useRef<HTMLDivElement>(null);\n  // hljs.registerLanguage('javascript', javascript);\n  // useEffect(() => {\n\n  // if (codeRef.current) {\n  //     hljs.highlightElement(codeRef.current);\n  //     hljs.highlightElement(codeRef.current);\n  // }\n  // }, [codeBlockCode]);\n\n  useEffect(() => {\n    const socket = io('http://localhost:3000');\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleTextChange = e => {\n    console.log(e);\n    const newText = e.target.value;\n    const newString = newText.split(\"\\n\");\n    setCodeBlockArr(newString);\n    setCodeBlockCode(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(CodeBlockContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CodeTag, {\n      children: codeBlockCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeTextArea, {\n      value: codeBlockCode,\n      readOnly: isMentor,\n      onChange: e => handleTextChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeBlockPage, \"kKVOSJHVzXLxJSTtPgyLOCNj7AI=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = CodeBlockPage;\nexport default CodeBlockPage;\nvar _c;\n$RefreshReg$(_c, \"CodeBlockPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useParams","CodeTextArea","CodeBlockContainer","CodeTag","io","jsxDEV","_jsxDEV","CodeBlockPage","_s","id","codeBlocksData","state","codeBlocks","value","currentCodeBlock","filter","codeBlock","_id","codeBlockCode","setCodeBlockCode","code","codeBlockArr","setCodeBlockArr","codeBlockName","setCodeBlockName","name","isMentor","setIsMentor","socket","on","console","log","disconnect","handleTextChange","e","newText","target","newString","split","children","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onChange","_c","$RefreshReg$"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/Moveo home assignment/front/src/pages/codeBlockPage/CodeBlockPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { IStore } from \"../../interfaces/IStore\";\nimport { CodeTextArea, CodeBlockContainer, CodeTag } from \"../../styledComponents/codeBlockPageStyledComponents\";\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\n// import 'highlight.js/styles/default.css';\nimport \"highlight.js/styles/github.css\";\nimport io from 'socket.io-client';\n\nexport const CodeBlockPage: React.FC = () => {\n\n    const { id = '' } = useParams();\n    const codeBlocksData = useSelector((state: IStore) => state.codeBlocks.value);\n    const currentCodeBlock = codeBlocksData.filter((codeBlock) => codeBlock._id === id);\n    const [codeBlockCode, setCodeBlockCode] = useState(currentCodeBlock[0].code);\n    const [codeBlockArr, setCodeBlockArr] = useState([codeBlockCode]);\n    const [codeBlockName, setCodeBlockName] = useState(currentCodeBlock[0].name);\n    const [isMentor, setIsMentor] = useState(false);\n\n    // const codeRef = useRef<HTMLDivElement>(null);\n    // hljs.registerLanguage('javascript', javascript);\n    // useEffect(() => {\n\n    // if (codeRef.current) {\n    //     hljs.highlightElement(codeRef.current);\n    //     hljs.highlightElement(codeRef.current);\n    // }\n    // }, [codeBlockCode]);\n\n    useEffect(() => {\n        const socket = io('http://localhost:3000');\n\n        socket.on('connect', () => {\n            console.log('Connected to server');\n        });\n\n        socket.on('disconnect', () => {\n            console.log('Disconnected from server');\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    const handleTextChange = (e: any) => {\n        console.log(e);\n        const newText = e.target.value;\n        const newString = newText.split(\"\\n\");\n        setCodeBlockArr(newString);\n        setCodeBlockCode(e.target.value);\n    }\n\n    return (\n        <CodeBlockContainer>\n            <CodeTag>{codeBlockCode}</CodeTag>\n            <CodeTextArea value={codeBlockCode} readOnly={isMentor} onChange={(e) => handleTextChange(e)} />\n        </CodeBlockContainer>\n    )\n}\n\nexport default CodeBlockPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}